[ -f ~/.secret_rc ] &&  source ~/.secret_rc
[ -f ~/.shared_rc ] &&  source ~/.shared_rc

#curl https://raw.githubusercontent.com/git/git/master/contrib/completion/git-completion.bash -o ~/.git-completion.bash
[ -f ~/.git-completion.bash ] &&  source ~/.git-completion.bash
[ -f `brew --prefix`/etc/bash_completion ] &&  source `brew --prefix`/etc/bash_completion

[ -f ~/google-cloud-sdk/completion.bash.inc ] &&  source ~/google-cloud-sdk/completion.bash.inc
[ -f ~/google-cloud-sdk/path.bash.inc ] &&  source ~/google-cloud-sdk/path.bash.inc
[ -f ~/.kube/completion.bash.inc ] &&  source ~/.kube/completion.bash.inc
[ -f /usr/local/etc/bash_completion ] &&  source /usr/local/etc/bash_completion
[ -f ~/.fzf.bash ] && source ~/.fzf.bash
[ -f ~/.asdf.sh ] && source ~/.asdf.sh
[ -f ~/.asdf/completions/asdf.bash ] && source ~/.asdf/completions/asdf.bash


function save_ifs(){
  set SAVED_IFS=$IFS
  IFS=$(echo -en "\n\b")
}

function restore_ifs(){
  IFS=$SAVED_IFS
  unset $SAVED_IFS
}

function desk() {
  local SAVED_IFS=$IFS
  IFS=$(echo -en "\n\b")
  mv -v $@ ~/Desktop
  IFS=$SAVED_IFS
}


# <grey>user@host <cyan>[pwd]
# <reset>$
GIT_PS1_SHOWCOLORHINTS=true
GIT_PS1_SHOWUNTRACKEDFILES=true
GIT_PS1_SHOWSTASHSTATE=true
GIT_PS1_SHOWDIRTYSTATE=true

#export PS1='\[\e[0;37m\]\u@\h\[\e[1;36m\] [\w\[\e[1;36m\]$(__git_ps1 "(%s)")]\n\[\e[0m\]$ '
#export PS1='\[\e[0;37m\]\u@\h\[\e[1;36m\] [\w\[\e[1;36m\]$(color_git_ps "(%s)")]\n\[\e[0m\]$ '
export PS1="\D{%F %T} \[\e[0;37m\]\u@\h\[\e[1;36m\] [\w\$(parse_git_branch)\[\e[1;36m\]]\n\[\e[0m\]$ "

## see: https://langui.sh/2014/03/10/wunused-command-line-argument-hard-error-in-future-is-a-harsh-mistress/
export ARCHFLAGS="-Wno-error=unused-command-line-argument-hard-error-in-future"

alias pull-request='hub pull-request'

###############################################################################
# DNSMASQ
###############################################################################
alias dnsmasq_start='sudo launchctl start homebrew.mxcl.dnsmasq'
alias dnsmasq_stop='sudo launchctl stop homebrew.mxcl.dnsmasq'

alias python='python3'

###############################################################################
# GO
###############################################################################
if [ $(which richgo) ]; then
  alias gotest='mark && richgo test ./...'
else
  alias gotest='go test ./...'
fi

###############################################################################
# DB
###############################################################################
export PATH="/usr/local/opt/mongodb@3.6/bin:$PATH"
alias mongod='mongod --dbpath /usr/local/var/mongodb/data/'

export PATH="/usr/local/opt/mysql@5.7/bin:$PATH"

###############################################################################
# KUBERNETES
###############################################################################
alias kube='kubectl'

###############################################################################
# PYTHON
###############################################################################
# Activate current folder's pipenv virtualenv
# or accept an explicit virtualenv name
workon() {
    if [ $# -eq 0 ]
    then
        source "$(pipenv --venv)/bin/activate"
    else
        source "~/.virtualenvs/$1/bin/activate"
    fi
}

# Making virtualenv alias
mkvenv() {
    cd ~/.virtualenvs
    virtualenv "$@"
    cd -
    workon "$1"
}

# Automatic virtualenv sourcing
function auto_pipenv_shell {
    if [ ! -n "$VIRTUAL_ENV" ]; then
        if [ -f "Pipfile" ] ; then
            workon
        fi
    fi
}
function cd {
    builtin cd "$@"
    auto_pipenv_shell
}
auto_pipenv_shell

###############################################################################
# RUST
###############################################################################
export PATH="$HOME/.cargo/bin:$PATH"
